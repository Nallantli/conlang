{"version":3,"sources":["styles.module.scss","fontStyle.module.css","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","interpolate","a","b","c","i","length","push","massInterpolate","value","callback","split","map","u","className","styles","GlossSeparator","console","log","GlossCell","props","data","gloss","replace","unit","key","SmallCaps","substr","GlossHover","glossKeys","GlossWord","GlossPhonemic","r","lastHeight","token","j","token_parts","newHeight","parseInt","style","top","height","backgroundImage","GlossIPA","Gloss","link","text","phnm","phnt","trns","expl","glosses","values","splitGloss","splitValue","dataTable","id","GlossLink","href","fontStyles","FontLatin","GlossTable","GlossTrans","GlossExpl","dangerouslySetInnerHTML","__html","App","Content","akamemi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f6dd545.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GlossTable\":\"styles_GlossTable__2J2Xr\",\"GlossCell\":\"styles_GlossCell__izrpm\",\"GlossIPA\":\"styles_GlossIPA__1yQIO\",\"SmallCaps\":\"styles_SmallCaps__2mT3y\",\"GlossWord\":\"styles_GlossWord__L6p1Z\",\"GlossHover\":\"styles_GlossHover__ElFXA\",\"Gloss\":\"styles_Gloss__N50EX\",\"GlossLink\":\"styles_GlossLink__3W4ix\",\"level-1\":\"styles_level-1__2u7NT\",\"level-2\":\"styles_level-2__3zPfM\",\"level-3\":\"styles_level-3__20XMV\",\"level-4\":\"styles_level-4__bB3DA\",\"level-5\":\"styles_level-5__3dtju\",\"level-6\":\"styles_level-6__2rmTF\",\"level-after-bottom\":\"styles_level-after-bottom__-fIGr\",\"level-after-top\":\"styles_level-after-top__3Eoky\",\"GlossTrans\":\"styles_GlossTrans__z9I2h\",\"GlossExpl\":\"styles_GlossExpl__3LCCD\",\"Content\":\"styles_Content__1yDKa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontEtlSerif\":\"fontStyle_FontEtlSerif__189fn\",\"FontEtlSans\":\"fontStyle_FontEtlSans__1Zupk\",\"FontEtlGothic\":\"fontStyle_FontEtlGothic__W_yvx\",\"FontEtlBlock\":\"fontStyle_FontEtlBlock__29SCA\",\"FontLatin\":\"fontStyle_FontLatin__2nNB5\"};","import React from 'react';\nimport './darkTheme.module.scss';\nimport './default.scss';\nimport styles from './styles.module.scss';\nimport fontStyles from './fontStyle.module.css';\nimport glossKeys from './glossKeys.json';\nimport akamemi from './akamemi.json';\n\nfunction interpolate(a: any[], b: any) {\n\tlet c = [];\n\tfor (let i = 0; i < a.length; i++) {\n\t\tc.push(a[i]);\n\t\tif (i < a.length - 1) {\n\t\t\tc.push(b);\n\t\t}\n\t}\n\treturn c;\n}\n\n// bruh moment\nfunction massInterpolate(value: string, callback: (a: string) => any) {\n\tif (!value) {\n\t\tconsole.log('no value');\n\t\treturn undefined;\n\t}\n\treturn interpolate(\n\t\tvalue.split('=').map(\n\t\t\tu => interpolate(\n\t\t\t\tu.split('-').map(\n\t\t\t\t\tu => interpolate(\n\t\t\t\t\t\tu.split('<').map(\n\t\t\t\t\t\t\tu => interpolate(\n\t\t\t\t\t\t\t\tu.split('>').map(\n\t\t\t\t\t\t\t\t\tu => interpolate(\n\t\t\t\t\t\t\t\t\t\tu.split('.').map(callback),\n\t\t\t\t\t\t\t\t\t\t(<span className={styles.GlossSeparator}>.</span>))),\n\t\t\t\t\t\t\t\t(<span className={styles.GlossSeparator}>&gt;</span>))),\n\t\t\t\t\t\t(<span className={styles.GlossSeparator}>&lt;</span>))),\n\t\t\t\t(<span className={styles.GlossSeparator}>-</span>))),\n\t\t(<span className={styles.GlossSeparator}>=</span>));\n}\n\nfunction resolveKey(key: string) {\n\treturn (glossKeys as { [key: string]: string })[key] || key;\n}\n\nfunction GlossCell(props: { data: [string, string] }) {\n\tconst [gloss, value] = props.data;\n\treturn (\n\t\t<table className={styles.GlossCell}>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{gloss.replace(/²/g, \"\").replace(/\\Ø/g, \"∅\").replace(/\\_/g, ' ')}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{massInterpolate(value, unit => {\n\t\t\t\t\t\t\tif (unit === '') {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tswitch (unit[0]) {\n\t\t\t\t\t\t\t\tcase '$':\n\t\t\t\t\t\t\t\t\treturn (<span className={styles.SmallCaps}>{unit.replace(/\\_/g, ' ').substr(1)}<div className={styles.GlossHover}><p>{resolveKey(unit.replace(/\\_/g, ' ').substr(1))}</p></div></span>);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn (<span className={styles.GlossWord}>{unit.replace(/\\_/g, ' ')}</span>);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n\nfunction GlossPhonemic(props: { data: string }) {\n\tconst { data } = props;\n\tconst r = [];\n\tlet lastHeight = 0;\n\tfor (let i = 0; i < data.length; i++) {\n\t\tif (data[i] === '{') {\n\t\t\tlet token = '';\n\t\t\tfor (let j = i + 1; j < data.length; j++) {\n\t\t\t\tif (data[j] === '}') {\n\t\t\t\t\ti = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken += data[j];\n\t\t\t}\n\t\t\tconst token_parts = token.split(':');\n\t\t\tconst newHeight = parseInt(token_parts[1]) - 1;\n\t\t\tif (newHeight >= lastHeight) {\n\t\t\t\tr.push((\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={styles[`level-${token_parts[1]}`]}\n\t\t\t\t\t>{token_parts[0]}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={styles[\"level-after-bottom\"]}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: `calc(100% + ${(lastHeight * 2) + 5}px)`,\n\t\t\t\t\t\t\t\theight: `${(newHeight - lastHeight) * 2}px`,\n\t\t\t\t\t\t\t\tbackgroundImage: `linear-gradient(to ${(newHeight - lastHeight) % 2 === 0 ? 'top' : 'bottom'}, var(--color-text) 50%, rgba(255, 255, 255, 0) 0%)`\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></span></span>));\n\t\t\t} else {\n\t\t\t\tr.push((\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={styles[`level-${token_parts[1]}`]}\n\t\t\t\t\t>{token_parts[0]}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={styles[\"level-after-top\"]}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: `calc(100% + ${(newHeight * 2) + 5}px)`,\n\t\t\t\t\t\t\t\theight: `${(lastHeight - newHeight) * 2}px`,\n\t\t\t\t\t\t\t\tbackgroundImage: `linear-gradient(to ${(lastHeight - newHeight) % 2 === 0 ? 'bottom' : 'top'}, var(--color-text) 50%, rgba(255, 255, 255, 0) 0%)`\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></span></span>));\n\t\t\t}\n\t\t\tlastHeight = newHeight;\n\t\t} else {\n\t\t\tr.push(data[i]);\n\t\t\tlastHeight = 0;\n\t\t}\n\t}\n\treturn (<div className={styles.GlossIPA}>/{r}/</div>);\n}\n\nfunction Gloss(props: { link?: string, text: string, phnm?: string, phnt?: string, trns: string, expl?: string, data: string[] }) {\n\tconst { link, data, text, phnm, phnt, trns, expl } = props;\n\tconst [glosses, values] = data;\n\tconst splitGloss = glosses.split(/\\s+/g);\n\tconst splitValue = values.split(/\\s+/g);\n\tconst dataTable = [];\n\tdataTable.push(<div>{\n\t\tsplitGloss.map((gloss, i) => (<GlossCell data={[gloss, splitValue[i]]} />))\n\t}</div>);\n\treturn (\n\t\t<div className={styles.Gloss}>\n\t\t\t{link && <a id={link} className={styles.GlossLink} href={`#${link}`}>#{link}</a>}\n\t\t\t<div>\n\t\t\t\t<span className={fontStyles.FontLatin}>{text.replace(/²/g, '')}</span>\n\t\t\t</div>\n\t\t\t<div className={styles.GlossTable}>\n\t\t\t\t{phnm && <GlossPhonemic data={phnm} />}\n\t\t\t\t{phnt && <div className={styles.GlossIPA}>[{phnt}]</div>}\n\t\t\t\t{dataTable}\n\t\t\t\t{trns && <div className={styles.GlossTrans}>{trns}</div>}\n\t\t\t</div>\n\t\t\t{expl && <div className={styles.GlossExpl} dangerouslySetInnerHTML={{__html: expl}}></div>}\n\t\t</div>\n\t);\n}\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className={styles.Content}>\n\t\t\t\t{\n\t\t\t\t\takamemi.map(data => (<Gloss {...data} />))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}