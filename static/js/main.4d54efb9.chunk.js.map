{"version":3,"sources":["fontStyle.module.css","darkTheme.module.scss","reportWebVitals.ts","Utils.tsx","GlossCell.tsx","Gloss.tsx","Genesis.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","transliterate","s","replace","interpolate","a","b","c","i","length","push","massInterpolate","styles","value","callback","split","map","u","className","GlossSeparator","console","log","GlossCell","props","data","gloss","unit","key","SmallCaps","substr","GlossHover","glossKeys","GlossWord","Gloss","select","noLink","hideGloss","fontOverride","link","text","phnt","phnm","trns","expl","glosses","values","splitGloss","splitValue","dataTable","GlossHeader","id","GlossLink","href","GlossButton","onClick","fontStyles","FontLatin","GlossTable","GlossIPA","GlossTrans","GlossExpl","dangerouslySetInnerHTML","__html","fontStyleNames","Genesis","state","fontOverrideIndex","this","Content","genesis","title","tphnt","image","passages","style","display","GenesisHeader","GenesisHeaderIPA","GenesisImage","src","process","OptionsContainer","TextButton","setState","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d54efb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontEtlSerif\":\"fontStyle_FontEtlSerif__189fn\",\"FontEtlSans\":\"fontStyle_FontEtlSans__1Zupk\",\"FontEtlGothic\":\"fontStyle_FontEtlGothic__W_yvx\",\"FontEtlBlock\":\"fontStyle_FontEtlBlock__29SCA\",\"FontEtlAkataneen\":\"fontStyle_FontEtlAkataneen__2_ZiS\",\"FontLatin\":\"fontStyle_FontLatin__2nNB5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GlossTable\":\"darkTheme_GlossTable__1lhN7\",\"GlossCell\":\"darkTheme_GlossCell__Ih5t3\",\"GlossIPA\":\"darkTheme_GlossIPA__31H-J\",\"EntryIPA\":\"darkTheme_EntryIPA__2ESKw\",\"GlossIPAContainer\":\"darkTheme_GlossIPAContainer__1HHqE\",\"SmallCaps\":\"darkTheme_SmallCaps__-sA6T\",\"GlossWord\":\"darkTheme_GlossWord__1jxlf\",\"GlossHover\":\"darkTheme_GlossHover__1kCPa\",\"Gloss\":\"darkTheme_Gloss__3mhw_\",\"GlossLink\":\"darkTheme_GlossLink__ma10S\",\"level-1\":\"darkTheme_level-1__3QksA\",\"level-2\":\"darkTheme_level-2__2BXZ8\",\"level-3\":\"darkTheme_level-3__1YRns\",\"level-4\":\"darkTheme_level-4__TN-JC\",\"level-5\":\"darkTheme_level-5__2zkbu\",\"level-6\":\"darkTheme_level-6__NbpUf\",\"level-after-bottom\":\"darkTheme_level-after-bottom__3HW2s\",\"level-after-top\":\"darkTheme_level-after-top__rkMV3\",\"GlossTrans\":\"darkTheme_GlossTrans__1hSH0\",\"GlossExpl\":\"darkTheme_GlossExpl__1WRHr\",\"NewQueryContainer\":\"darkTheme_NewQueryContainer__31TBH\",\"Content\":\"darkTheme_Content__3tOvU\",\"GlossButton\":\"darkTheme_GlossButton__dbY8i\",\"GlossHeader\":\"darkTheme_GlossHeader__1XgRD\",\"NewQueryContainerAfter\":\"darkTheme_NewQueryContainerAfter__pK4La\",\"NewQuery\":\"darkTheme_NewQuery__37PUa\",\"NewQueryTotal\":\"darkTheme_NewQueryTotal__RPuuH\",\"ButtonContainer\":\"darkTheme_ButtonContainer__1dKQ4\",\"TextButton\":\"darkTheme_TextButton__368PD\",\"EntryDefIndex\":\"darkTheme_EntryDefIndex__3OF23\",\"EntryLemma\":\"darkTheme_EntryLemma__3ee-4\",\"EntryType\":\"darkTheme_EntryType__3Jpd8\",\"Entry\":\"darkTheme_Entry__3H9YR\",\"EntryNounLemma\":\"darkTheme_EntryNounLemma__3HfxN\",\"TableHeader\":\"darkTheme_TableHeader__2Cgfe\",\"SearchBar\":\"darkTheme_SearchBar__SmT6z\",\"SearchResults\":\"darkTheme_SearchResults__3aow2\",\"GenesisHeader\":\"darkTheme_GenesisHeader__1r76U\",\"OptionsContainer\":\"darkTheme_OptionsContainer__2b83j\",\"GenesisHeaderIPA\":\"darkTheme_GenesisHeaderIPA__12pMZ\",\"GenesisImage\":\"darkTheme_GenesisImage__1oPVx\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import glossKeys from './glossKeys.json';\r\n\r\nexport interface GlossTemplate {\r\n\t\"link\": string,\r\n\t\"text\": string,\r\n\t\"phnm\"?: string,\r\n\t\"phnt\"?: string,\r\n\t\"trns\": string,\r\n\t\"expl\"?: string,\r\n\t\"data\": [string, string]\r\n}\r\n\r\nexport interface GlosserProps {\r\n\tquery?: string[],\r\n\tstyles: any\r\n}\r\n\r\nexport interface GlosserState {\r\n\tquery: string[],\r\n\tnewQuery: string[],\r\n\tglosses: GlossTemplate[]\r\n}\r\n\r\nexport function generateFromText(text: string) {\r\n\ttext = transliterate(text.toLowerCase())\r\n\t\t.replace(/([bcdkjlmnpqrstwxyz]{0,1}[aeiouāēīōū](\\s|$|(?=[bcdkjlmnpqrstwxyz]{0,1}[aeiouāēīōū])|[bcdkjlmnpqrhstwxyz]))/g, '{$1}')\r\n\t\t.replace(/\\{(.*?) \\}/g, '{$1} ');\r\n\tlet newText = '';\r\n\tlet current = '';\r\n\tlet mode = 0;\r\n\tfor (let i = 0; i < text.length; i++) {\r\n\t\tswitch (mode) {\r\n\t\t\tcase 0:\r\n\t\t\t\tif (text[i] === '{') {\r\n\t\t\t\t\tmode = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewText += text[i];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tif (text[i] === '}') {\r\n\t\t\t\t\tmode = 0;\r\n\t\t\t\t\tnewText += `{${current}:${getSyllableWeight(current)}}`;\r\n\t\t\t\t\tcurrent = '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrent += text[i];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn newText\r\n\t\t.replace(/j/g, 't͜ɬ')\r\n\t\t.replace(/y/g, 'j')\r\n\t\t.replace(/x/g, 'ʃ')\r\n\t\t.replace(/c/g, 't͜ʃ')\r\n\t\t.replace(/z/g, 't͜s')\r\n\t\t.replace(/h/g, 'ʔ')\r\n\t\t.replace(/q/g, 'kʷ')\r\n\t\t.replace(/ā/g, 'a͈')\r\n\t\t.replace(/ē/g, 'e͈')\r\n\t\t.replace(/ī/g, 'i͈')\r\n\t\t.replace(/ō/g, 'o͈')\r\n\t\t.replace(/ū/g, 'u͈');\r\n}\r\n\r\nexport function transliterate(s: string) {\r\n\treturn s\r\n\t\t.replace(/²/g, \"\")\r\n\t\t.replace(/qu/g, \"q\")\r\n\t\t.replace(/Qu/g, \"Q\")\r\n\t\t.replace(/hu/g, \"w\")\r\n\t\t.replace(/Hu/g, \"W\")\r\n\t\t.replace(/lh/g, \"ly\")\r\n\t\t.replace(/tl/g, 'j')\r\n\t\t.replace(/Tl/g, 'J');\r\n}\r\n\r\nfunction getSyllableWeight(syllable: string) {\r\n\tswitch (syllable.length) {\r\n\t\tcase 1:\r\n\t\t\treturn syllable[0].match(/[aeiou]/) ? 2 : 5;\r\n\t\tcase 2:\r\n\t\t\tif (syllable[0].match(/[aeiou]/)) {\r\n\t\t\t\treturn syllable[1] === 'h' ? 1 : 3;\r\n\t\t\t}\r\n\t\t\tif (syllable[0].match(/[āēīōū]/)) {\r\n\t\t\t\treturn syllable[1] === 'h' ? 4 : 6;\r\n\t\t\t}\r\n\t\t\tif (syllable[1].match(/[aeiou]/)) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t\tif (syllable[1].match(/[āēīōū]/)) {\r\n\t\t\t\treturn 5;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\tcase 3: {\r\n\t\t\tif (syllable[1].match(/[aeiou]/)) {\r\n\t\t\t\treturn syllable[2] === 'h' ? 1 : 3;\r\n\t\t\t}\r\n\t\t\tif (syllable[1].match(/[āēīōū]/)) {\r\n\t\t\t\treturn syllable[2] === 'h' ? 4 : 6;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction interpolate(a: any[], b: any) {\r\n\tlet c = [];\r\n\tfor (let i = 0; i < a.length; i++) {\r\n\t\tc.push(a[i]);\r\n\t\tif (i < a.length - 1) {\r\n\t\t\tc.push(b);\r\n\t\t}\r\n\t}\r\n\treturn c;\r\n}\r\n\r\n// bruh moment\r\nexport function massInterpolate(styles: any, value: string, callback: (a: string) => any) {\r\n\tif (!value) {\r\n\t\tconsole.log('no value');\r\n\t\treturn undefined;\r\n\t}\r\n\treturn interpolate(\r\n\t\tvalue.split('=').map(\r\n\t\t\tu => interpolate(\r\n\t\t\t\tu.split('-').map(\r\n\t\t\t\t\tu => interpolate(\r\n\t\t\t\t\t\tu.split('<').map(\r\n\t\t\t\t\t\t\tu => interpolate(\r\n\t\t\t\t\t\t\t\tu.split('>').map(\r\n\t\t\t\t\t\t\t\t\tu => interpolate(\r\n\t\t\t\t\t\t\t\t\t\tu.split('.').map(callback),\r\n\t\t\t\t\t\t\t\t\t\t(<span className={styles.GlossSeparator}>.</span>))),\r\n\t\t\t\t\t\t\t\t(<span className={styles.GlossSeparator}>&gt;</span>))),\r\n\t\t\t\t\t\t(<span className={styles.GlossSeparator}>&lt;</span>))),\r\n\t\t\t\t(<span className={styles.GlossSeparator}>-</span>))),\r\n\t\t(<span className={styles.GlossSeparator}>=</span>));\r\n}\r\n\r\nexport function resolveKey(key: string) {\r\n\treturn (glossKeys as { [key: string]: string })[key] || key;\r\n}","import { massInterpolate, resolveKey } from \"./Utils\";\r\n\r\nexport function GlossCell(props: { data: [string, string], styles: any }) {\r\n\tconst { data, styles } = props;\r\n\tconst [gloss, value] = data;\r\n\treturn (\r\n\t\t<table className={styles.GlossCell}>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>{gloss.replace(/²/g, \"\").replace(/\\Ø/g, \"∅\").replace(/\\_/g, ' ')}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{massInterpolate(styles, value, unit => {\r\n\t\t\t\t\t\t\tif (unit === '') {\r\n\t\t\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tswitch (unit[0]) {\r\n\t\t\t\t\t\t\t\tcase '$':\r\n\t\t\t\t\t\t\t\t\treturn (<span className={styles.SmallCaps}>{unit.replace(/\\_/g, ' ').substr(1)}<div className={styles.GlossHover}><p>{resolveKey(unit.replace(/\\_/g, ' ').substr(1))}</p></div></span>);\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\treturn (<span className={styles.GlossWord}>{unit.replace(/\\_/g, ' ')}</span>);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}","import fontStyles from './fontStyle.module.css';\r\nimport { GlossCell } from \"./GlossCell\";\r\nimport { GlossPhonemic } from \"./GlossPhonemic\";\r\nimport { generateFromText, GlossTemplate, transliterate } from \"./Utils\";\r\n\r\nexport function Gloss(props: { noLink?: boolean, hideGloss?: boolean, fontOverride?: string, styles: any, gloss: GlossTemplate, select: (link: string) => void }) {\r\n\tconst { gloss, select, styles, noLink, hideGloss, fontOverride } = props;\r\n\tconst { data, link, text, phnm, phnt, trns, expl } = gloss;\r\n\tconst [glosses, values] = data;\r\n\tconst splitGloss = glosses.split(/\\s+/g);\r\n\tconst splitValue = values.split(/\\s+/g);\r\n\tconst dataTable = [];\r\n\tdataTable.push(<div>{\r\n\t\tsplitGloss.map((gloss, i) => (<GlossCell styles={styles} data={[gloss, splitValue[i]]} />))\r\n\t}</div>);\r\n\treturn (\r\n\t\t<div className={styles.Gloss}>\r\n\t\t\t{!noLink &&\r\n\t\t\t\t<div className={styles.GlossHeader}>\r\n\t\t\t\t\t<a id={link} className={styles.GlossLink} href={`#${link}`}>#{link}</a>\r\n\t\t\t\t\t<button className={styles.GlossButton} onClick={() => select(link)}>+</button>\r\n\t\t\t\t</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<span className={fontOverride ? fontStyles[fontOverride] : fontStyles.FontLatin}>{\r\n\t\t\t\t\tfontOverride && fontOverride !== 'FontLatin' ? transliterate(text) : text.replace(/²/g, '')\r\n\t\t\t\t}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.GlossTable}>\r\n\t\t\t\t{false && <div className={styles.GlossIPAContainer}>\r\n\t\t\t\t\t<GlossPhonemic styles={styles} data={phnm || generateFromText(text)} />\r\n\t\t\t\t</div>}\r\n\t\t\t\t{phnt && <div className={styles.GlossIPA}>[{phnt}]</div>}\r\n\t\t\t\t{!hideGloss && dataTable}\r\n\t\t\t\t{trns && <div className={styles.GlossTrans}>{trns}</div>}\r\n\t\t\t</div>\r\n\t\t\t{expl && <div className={styles.GlossExpl} dangerouslySetInnerHTML={{ __html: expl }}></div>}\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport { Gloss } from './Gloss';\r\nimport genesis from './genesis.json';\r\nimport { GlossTemplate } from \"./Utils\";\r\nimport './default.scss';\r\n\r\nconst fontStyleNames = [\r\n\t\"FontLatin\",\r\n\t\"FontEtlSerif\",\r\n\t\"FontEtlSans\",\r\n\t\"FontEtlGothic\",\r\n\t\"FontEtlBlock\",\r\n\t\"FontEtlAkataneen\"\r\n];\r\n\r\nexport interface GenesisProps {\r\n\tstyles: any\r\n}\r\n\r\nexport interface GenesisState {\r\n\thideGloss: boolean,\r\n\tfontOverrideIndex: number,\r\n}\r\n\r\ninterface PassageTemplate {\r\n\ttitle: string,\r\n\ttphnt: string,\r\n\timage: string,\r\n\tpassages: GlossTemplate[];\r\n}\r\n\r\nexport class Genesis extends React.Component<GenesisProps, GenesisState> {\r\n\tconstructor(props: GenesisProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\thideGloss: true,\r\n\t\t\tfontOverrideIndex: 0\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst { styles } = this.props;\r\n\t\tconst { hideGloss, fontOverrideIndex } = this.state;\r\n\t\tconst passagemap = genesis as PassageTemplate[];\r\n\t\treturn (<div className='App'>\r\n\t\t\t<div className={styles.Content}>\r\n\t\t\t\t{(genesis as PassageTemplate[]).map(({ title, tphnt, image, passages }) =>\r\n\t\t\t\t(<div style={{display: 'grid'}}>\r\n\t\t\t\t\t<div className={styles.GenesisHeader}>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t<div className={styles.GenesisHeaderIPA}>[{tphnt}]</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{image && <img className={styles.GenesisImage} src={process.env.PUBLIC_URL + `/${image}`} />}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{passages.map(data => (<Gloss fontOverride={fontStyleNames[fontOverrideIndex]} noLink={true} hideGloss={hideGloss} styles={styles} gloss={data} select={() => { }} />))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.OptionsContainer}>\r\n\t\t\t\t<button className={styles.TextButton}\r\n\t\t\t\t\tonClick={() => this.setState(state => ({ hideGloss: !state.hideGloss }))}>\r\n\t\t\t\t\ttoggle gloss\r\n\t\t\t\t</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<button className={styles.TextButton}\r\n\t\t\t\t\tonClick={() => this.setState(state => ({ fontOverrideIndex: (state.fontOverrideIndex + 1) % fontStyleNames.length }))}>\r\n\t\t\t\t\tcycle font\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>);\r\n\t}\r\n}","import { Glosser } from \"./Glosser\";\r\nimport styles from './darkTheme.module.scss';\r\nimport { Search } from \"./Search\";\r\nimport { Genesis } from \"./Genesis\";\r\n\r\nexport default function App() {\r\n\treturn <Genesis styles={styles} />;\r\n\t/*\r\n\tconst urlParams = new URLSearchParams(window.location.search);\r\n\tswitch (window.location.hash) {\r\n\tcase \"#/search\":\r\n\t\treturn <Search styles={styles} query={urlParams.get('q') || ''} />;\r\n\tcase \"#/genesis\":\r\n\t\treturn <Genesis styles={styles} />;\r\n\tdefault:\r\n\t\treturn <Glosser query={urlParams.get('q')?.split('|')} styles={styles} />;\r\n\t}\r\n\t*/\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}